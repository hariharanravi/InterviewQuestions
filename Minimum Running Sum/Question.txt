Start with a given array of integers and an arbitrary initial value x. Calculate the running sum of x plus each array element, from left to right. The running sum must never get below 1.  Determine the minimum value of x. 

 

Example

arr = [-2, 3, 1, -5]. 

 

If x = 4, the following results are obtained:

Running     
sum       arr[i]
-----     -----
4          -2
2           3
5           1
6          -5
1
 

The final value is 1, and the running sum has never dropped below 1.  The minimum starting value for x is 4.

 

Function Description

Complete the function minX in the editor below.

 

minX has the following parameter(s):

    int arr[n]:  an array of integers

 

Returns

    int: the minimum integer value for x

 

Constraints

1 ≤ n ≤ 105
−100 ≤ arr[i] ≤ 100
 

Input Format for Custom Testing
Sample Case 0
Sample Input

STDIN     Function
-----     -----
10     →  arr[i] size n = 10
-5     →  arr = [-5, 4, -2, 3, 1, -1, -6, -1, 0, 5]
4
-2
3
1
-1
-6
-1
0
5
 

Sample Output

8
 

Explanation

Running 
sum       arr[i] 
-----     ----- 
8          -5
3           4
7          -2
5           3
8           1
9          -1
8          -6
2          -1
1           0
1           5
6
The minimum starting value for x is 8.

Sample Case 1
Sample Input

STDIN     Function
-----     -----
5      →  arr[i] size n = 5
-5     →  arr = [-5, 4, -2, 3, 1]
4
-2
3
1
 

Sample Output

6
 

Explanation

Running 
sum      arr[i] 
-----    ----- 
6         -5
1          4
5         -2
3          3
6          1
7           
The minimum starting value for x is 6.

Sample Case 2
Sample Input

STDIN     Function
-----     -----
10     →  arr[i] size n = 10
-5     →  arr = [-5, 4, -2, 3, 1, -1, -6, -1, 0, -5]
4
-2
3
1
-1
-6
-1
0
-5
 

Sample Output

13
 

Explanation

Running 
sum        arr[i] 
-----      ----- 
13          -5
 8           4
12          -2
10           3
13           1
14          -1
13          -6
 7          -1
 6           0
 6          -5
 1
The minimum starting value for x is 13.